{
	"info": {
		"_postman_id": "7976fe63-65b4-469f-b137-05f9332ce1ff",
		"name": "criardiretoria-D",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27630415",
		"_collection_link": "https://planetary-zodiac-829770.postman.co/workspace/The-Originals~b0b7a5e1-fed1-42fc-be24-989204af3fd5/collection/27630415-7976fe63-65b4-469f-b137-05f9332ce1ff?action=share&source=collection_link&creator=27630415"
	},
	"item": [
		{
			"name": "Be happy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateBoardName() {\r",
							"    // Nomes criativos para diretorias\r",
							"    var directorateNames = [\r",
							"        \"Transformação\", \"Inovação\", \"Estratégia\", \"Crescimento\", \"Eficiência\",\r",
							"        \"Operações\", \"Marketing\", \"Finanças\", \"RecursosHumanos\", \"Comercial\",\r",
							"        \"Produção\", \"Logística\", \"Qualidade\", \"Pesquisa\", \"Design\",\r",
							"        \"Sustentabilidade\", \"Educação\", \"Comunicação\", \"Jurídico\", \"Internacional\",\r",
							"        \"Digital\", \"Clientes\", \"Parcerias\", \"Desenvolvimento Pessoal\", \"Engenharia\"\r",
							"    ];\r",
							"\r",
							"    // Seleciona duas diretorias aleatórias do array\r",
							"    var randomDirectorate1 = directorateNames[Math.floor(Math.random() * directorateNames.length)];\r",
							"    var randomDirectorate2 = directorateNames[Math.floor(Math.random() * directorateNames.length)];\r",
							"\r",
							"    // Combina as diretorias com o caractere especial '&', sem espaços\r",
							"    var boardName = randomDirectorate1 + \"&\" + randomDirectorate2;\r",
							"\r",
							"    // Checa se o tamanho do nome ultrapassa 50 caracteres\r",
							"    if (boardName.length > 50) {\r",
							"        // Se ultrapassar, corta o nome para 50 caracteres\r",
							"        boardName = boardName.substring(0, 50);\r",
							"    }\r",
							"\r",
							"    return boardName;\r",
							"}\r",
							"\r",
							"// Gera um nome para a variável boardName e define como uma variável de ambiente\r",
							"var boardName = generateBoardName();\r",
							"pm.environment.set(\"boardName\", boardName); // Define a variável no ambiente\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Verifica se 'boardCode' está presente no corpo da resposta\", function () {\r",
							"    var responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include('\"boardCode\"');\r",
							"});\r",
							"\r",
							"pm.environment.set(\"boardId\",pm.variables.replaceIn(JSON.parse(responseBody).newBoard._id));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/board/",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"board",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{Token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}