{
	"info": {
		"_postman_id": "63b6bea7-ecb2-4730-a894-1da1a9662bda",
		"name": "Centro de Custo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27630415",
		"_collection_link": "https://planetary-zodiac-829770.postman.co/workspace/The-Originals~b0b7a5e1-fed1-42fc-be24-989204af3fd5/collection/27630415-63b6bea7-ecb2-4730-a894-1da1a9662bda?action=share&source=collection_link&creator=27630415"
	},
	"item": [
		{
			"name": "Login - admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.globals.set(\"Token\", JSON.parse(responseBody).token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"mail\": \"{{MailAdmin}}\",\r\n  \"password\": \"{{PasswordAdmin}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar diretoria",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateBoardName() {\r",
							"    // Nomes criativos para diretorias\r",
							"   var directorateNames = [\r",
							"    \"Tecnologia\",     \"Finanças\",     \"Marketing\",     \"Recursos Humanos\",     \"Operações\",     \"Vendas\",     \"Desenvolvimento de Negócios\",     \"Jurídico\",     \"Produção\",     \"Pesquisa e Desenvolvimento\",     \"Logística\",     \"Qualidade\",     \"Comunicações\",     \"Estratégia\",     \"Sustentabilidade\",     \"Engenharia\",     \"Inovação\",     \"Assuntos Regulatórios\",     \"Planejamento\",     \"Administração\",     \"Gestão de Projetos\",     \"Desenvolvimento de Produto\",     \"Relações Públicas\",     \"Serviços ao Cliente\",     \"TI\",     \"Assuntos Corporativos\",     \"Gerenciamento de Produto\",     \"Desenvolvimento Corporativo\",     \"Segurança\",     \"Auditoria\",     \"Treinamento\",     \"Desenvolvimento de Mercado\",     \"Aquisições\",     \"Consultoria\",     \"Assuntos Governamentais\",     \"Contabilidade\",     \"Análise de Dados\",     \"Compliance\",     \"Planejamento Estratégico\",     \"Gestão de Riscos\",     \"Relações com Investidores\",     \"Pesquisa de Mercado\",     \"Design\",     \"Relações Internacionais\",     \"Desenvolvimento de Talento\",     \"Parcerias\",     \"Compras\",     \"Educação Corporativa\",     \"Desenvolvimento Organizacional\",     \"Gestão de Ativos\",     \"Gestão de Marca\",     \"Gestão de Produto\",     \"Arquitetura\",     \"Gestão de Investimentos\",     \"Gestão de Portfólio\",     \"Gestão de Mudanças\",     \"Gestão de Recursos\",     \"Gestão de Fornecedores\",     \"Gestão de Clientes\",     \"Gestão de Parceiros\",     \"Gestão de Conteúdo\",     \"Gestão de Tecnologia\",     \"Gestão de Seguros\",     \"Gestão de Informações\",     \"Gestão de Recursos Humanos\",     \"Gestão de Desempenho\",     \"Gestão de Vendas\",     \"Gestão de Operações\",     \"Gestão de Projetos\",     \"Gestão de Logística\",     \"Gestão de Qualidade\",     \"Gestão de Frotas\",     \"Gestão de Frota\",     \"Gestão de Energia\",     \"Gestão de Marketing\",     \"Gestão de Produtos\",     \"Gestão de Segurança\",     \"Gestão de Ambiente\",     \"Gestão de Reciclagem\",     \"Gestão de Redes\",     \"Gestão de Compras\",     \"Gestão de Inventário\",     \"Gestão de Pessoas\",     \"Gestão de Talentos\",     \"Gestão de Treinamento\",     \"Gestão de Processos\",     \"Gestão de Procedimentos\",     \"Gestão de Operações\",     \"Gestão de Finanças\",     \"Gestão de Comunicações\",     \"Gestão de Tecnologia\",     \"Gestão de Inovação\",     \"Gestão de Conhecimento\",     \"Gestão de Projetos\",     \"Gestão de Portfolio\"\r",
							"];\r",
							"\r",
							"    // Seleciona duas diretorias aleatórias do array\r",
							"    var randomDirectorate1 = directorateNames[Math.floor(Math.random() * directorateNames.length)];\r",
							"    var randomDirectorate2 = directorateNames[Math.floor(Math.random() * directorateNames.length)];\r",
							"\r",
							"    // Combina as diretorias com o caractere especial '&', sem espaços\r",
							"    var boardName = randomDirectorate1 + \"&\" + randomDirectorate2;\r",
							"\r",
							"    // Checa se o tamanho do nome ultrapassa 50 caracteres\r",
							"    if (boardName.length > 50) {\r",
							"        // Se ultrapassar, corta o nome para 50 caracteres\r",
							"        boardName = boardName.substring(0, 50);\r",
							"    }\r",
							"\r",
							"    return boardName;\r",
							"}\r",
							"\r",
							"// Gera um nome para a variável boardName e define como uma variável de ambiente\r",
							"var boardName = generateBoardName();\r",
							"pm.environment.set(\"boardName\", boardName); // Define a variável no ambiente\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"boardId\",pm.variables.replaceIn(JSON.parse(responseBody).newBoard._id));\r",
							"\r",
							"pm.test(\"Verificar mensagem de sucesso\", function () {\r",
							"    pm.expect(\"Cadastro realizado com sucesso!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"boardName\": \"{{boardName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/board/",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"board",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Criar CCusto-Happy path",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Função para gerar um string aleatória\r",
							"function generateRandomString(length) {\r",
							"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
							"    let result = '';\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"// Função para gerar um nome representativo de centro de custo\r",
							"function generateCostCenterName() {\r",
							"    const prefixes = ['IT', 'Finance', 'HR', 'Marketing', 'Operations'];\r",
							"    const suffixes = ['Center', 'Hub', 'Division', 'Department'];\r",
							"\r",
							"    const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
							"    const randomSuffix = suffixes[Math.floor(Math.random() * suffixes.length)];\r",
							"\r",
							"    return `${randomPrefix} ${generateRandomString(4)} ${randomSuffix}`;\r",
							"}\r",
							"\r",
							"// Gerar um nome representativo de centro de custo e definir como variável de ambiente\r",
							"const costCenterName = generateCostCenterName();\r",
							"pm.environment.set('costCenterName', costCenterName);\r",
							"\r",
							"// Log do nome gerado para fins de depuração\r",
							"console.log(`Generated Cost Center Name: ${costCenterName}`);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar mensagem de sucesso\", function () {\r",
							"    pm.expect(\"Cadastro realizado com sucesso.\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"costCenterId\",pm.variables.replaceIn(JSON.parse(responseBody).newCostCenter._id));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costCenterName\": \"{{costCenterName}}\",\r\n  \"boardId\": \"{{boardId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/costCenter/",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"costCenter",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Empty board ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Função para gerar um string aleatória\r",
							"function generateRandomString(length) {\r",
							"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
							"    let result = '';\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"// Função para gerar um nome representativo de centro de custo\r",
							"function generateCostCenterName() {\r",
							"    const prefixes = ['IT', 'Finance', 'HR', 'Marketing', 'Operations'];\r",
							"    const suffixes = ['Center', 'Hub', 'Division', 'Department'];\r",
							"\r",
							"    const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
							"    const randomSuffix = suffixes[Math.floor(Math.random() * suffixes.length)];\r",
							"\r",
							"    return `${randomPrefix} ${generateRandomString(4)} ${randomSuffix}`;\r",
							"}\r",
							"\r",
							"// Gerar um nome representativo de centro de custo e definir como variável de ambiente\r",
							"const costCenterName = generateCostCenterName();\r",
							"pm.environment.set('costCenterName', costCenterName);\r",
							"\r",
							"// Log do nome gerado para fins de depuração\r",
							"console.log(`Generated Cost Center Name: ${costCenterName}`);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar mensagem de alerta\", function () {\r",
							"    pm.expect(\"O campo 'ID da diretoria' é obrigatório.\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar mensagem de sucesso\", function () {\r",
							"    pm.expect(\"O campo 'ID da diretoria' é obrigatório.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costCenterName\": \"{{costCenterName}}\",\r\n  \"boardId\": \" \"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/costCenter/",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"costCenter",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Empty Center Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Função para gerar um string aleatória\r",
							"function generateRandomString(length) {\r",
							"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
							"    let result = '';\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"// Função para gerar um nome representativo de centro de custo\r",
							"function generateCostCenterName() {\r",
							"    const prefixes = ['IT', 'Finance', 'HR', 'Marketing', 'Operations'];\r",
							"    const suffixes = ['Center', 'Hub', 'Division', 'Department'];\r",
							"\r",
							"    const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
							"    const randomSuffix = suffixes[Math.floor(Math.random() * suffixes.length)];\r",
							"\r",
							"    return `${randomPrefix} ${generateRandomString(4)} ${randomSuffix}`;\r",
							"}\r",
							"\r",
							"// Gerar um nome representativo de centro de custo e definir como variável de ambiente\r",
							"const costCenterName = generateCostCenterName();\r",
							"pm.environment.set('costCenterName', costCenterName);\r",
							"\r",
							"// Log do nome gerado para fins de depuração\r",
							"console.log(`Generated Cost Center Name: ${costCenterName}`);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verificar mensagem de erro\", function () {\r",
							"    pm.expect(\"O campo 'centro de custos' é obrigatório.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costCenterName\": \" \",\r\n  \"boardId\": \"{{boardId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/costCenter/",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"costCenter",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar CCusto-Happy path",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Função para gerar um string aleatória\r",
							"function generateRandomString(length) {\r",
							"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
							"    let result = '';\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"// Função para gerar um nome representativo de centro de custo\r",
							"function generateCostCenterName() {\r",
							"    const prefixes = ['IT', 'Finance', 'HR', 'Marketing', 'Operations'];\r",
							"    const suffixes = ['Center', 'Hub', 'Division', 'Department'];\r",
							"\r",
							"    const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
							"    const randomSuffix = suffixes[Math.floor(Math.random() * suffixes.length)];\r",
							"\r",
							"    return `${randomPrefix} ${generateRandomString(4)} ${randomSuffix}`;\r",
							"}\r",
							"\r",
							"// Gerar um nome representativo de centro de custo e definir como variável de ambiente\r",
							"const costCenterName = generateCostCenterName();\r",
							"pm.environment.set('costCenterName', costCenterName);\r",
							"\r",
							"// Log do nome gerado para fins de depuração\r",
							"console.log(`Generated Cost Center Name: ${costCenterName}`);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar mensagem de sucesso\", function () {\r",
							"    pm.expect(\"Cadastro realizado com sucesso.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costCenterName\": \"{{costCenterName}}\",\r\n  \"boardId\": \"{{boardId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/costCenter/{{costCenterId}}",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"costCenter",
						"{{costCenterId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar CCusto-EmptyName",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Função para gerar um string aleatória\r",
							"function generateRandomString(length) {\r",
							"    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
							"    let result = '';\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * characters.length));\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"// Função para gerar um nome representativo de centro de custo\r",
							"function generateCostCenterName() {\r",
							"    const prefixes = ['IT', 'Finance', 'HR', 'Marketing', 'Operations'];\r",
							"    const suffixes = ['Center', 'Hub', 'Division', 'Department'];\r",
							"\r",
							"    const randomPrefix = prefixes[Math.floor(Math.random() * prefixes.length)];\r",
							"    const randomSuffix = suffixes[Math.floor(Math.random() * suffixes.length)];\r",
							"\r",
							"    return `${randomPrefix} ${generateRandomString(4)} ${randomSuffix}`;\r",
							"}\r",
							"\r",
							"// Gerar um nome representativo de centro de custo e definir como variável de ambiente\r",
							"const costCenterName = generateCostCenterName();\r",
							"pm.environment.set('costCenterName', costCenterName);\r",
							"\r",
							"// Log do nome gerado para fins de depuração\r",
							"console.log(`Generated Cost Center Name: ${costCenterName}`);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Verificar mensagem de erro\", function () {\r",
							"    pm.expect(\"O campo 'centro de custos' é obrigatório.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "token",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costCenterName\": \"\",\r\n  \"boardId\": \"{{boardId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://the-originals.qacoders-academy.com.br/api/costCenter/{{costCenterId}}",
					"protocol": "https",
					"host": [
						"the-originals",
						"qacoders-academy",
						"com",
						"br"
					],
					"path": [
						"api",
						"costCenter",
						"{{costCenterId}}"
					]
				}
			},
			"response": []
		}
	]
}